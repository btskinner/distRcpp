// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getDistMat
NumericMatrix getDistMat(const NumericVector& xlon, const NumericVector& xlat, const NumericVector& ylon, const NumericVector& ylat, std::string funname);
RcppExport SEXP distweightRcpp_getDistMat(SEXP xlonSEXP, SEXP xlatSEXP, SEXP ylonSEXP, SEXP ylatSEXP, SEXP funnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type xlon(xlonSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type xlat(xlatSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylon(ylonSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylat(ylatSEXP);
    Rcpp::traits::input_parameter< std::string >::type funname(funnameSEXP);
    rcpp_result_gen = Rcpp::wrap(getDistMat(xlon, xlat, ylon, ylat, funname));
    return rcpp_result_gen;
END_RCPP
}
// getDistDF
NumericVector getDistDF(const NumericVector& xlon, const NumericVector& xlat, const NumericVector& ylon, const NumericVector& ylat, std::string funname);
RcppExport SEXP distweightRcpp_getDistDF(SEXP xlonSEXP, SEXP xlatSEXP, SEXP ylonSEXP, SEXP ylatSEXP, SEXP funnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type xlon(xlonSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type xlat(xlatSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylon(ylonSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylat(ylatSEXP);
    Rcpp::traits::input_parameter< std::string >::type funname(funnameSEXP);
    rcpp_result_gen = Rcpp::wrap(getDistDF(xlon, xlat, ylon, ylat, funname));
    return rcpp_result_gen;
END_RCPP
}
// getDistVec
NumericVector getDistVec(const double& xlon, const double& xlat, const NumericVector& ylon, const NumericVector& ylat, std::string funname);
RcppExport SEXP distweightRcpp_getDistVec(SEXP xlonSEXP, SEXP xlatSEXP, SEXP ylonSEXP, SEXP ylatSEXP, SEXP funnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type xlon(xlonSEXP);
    Rcpp::traits::input_parameter< const double& >::type xlat(xlatSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylon(ylonSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ylat(ylatSEXP);
    Rcpp::traits::input_parameter< std::string >::type funname(funnameSEXP);
    rcpp_result_gen = Rcpp::wrap(getDistVec(xlon, xlat, ylon, ylat, funname));
    return rcpp_result_gen;
END_RCPP
}
// getDist
double getDist(const double& xlon, const double& xlat, const double& ylon, const double& ylat, std::string funname);
RcppExport SEXP distweightRcpp_getDist(SEXP xlonSEXP, SEXP xlatSEXP, SEXP ylonSEXP, SEXP ylatSEXP, SEXP funnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type xlon(xlonSEXP);
    Rcpp::traits::input_parameter< const double& >::type xlat(xlatSEXP);
    Rcpp::traits::input_parameter< const double& >::type ylon(ylonSEXP);
    Rcpp::traits::input_parameter< const double& >::type ylat(ylatSEXP);
    Rcpp::traits::input_parameter< std::string >::type funname(funnameSEXP);
    rcpp_result_gen = Rcpp::wrap(getDist(xlon, xlat, ylon, ylat, funname));
    return rcpp_result_gen;
END_RCPP
}
// invDistWeight
NumericVector invDistWeight(const NumericVector& d, double exp, std::string transform);
RcppExport SEXP distweightRcpp_invDistWeight(SEXP dSEXP, SEXP expSEXP, SEXP transformSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type exp(expSEXP);
    Rcpp::traits::input_parameter< std::string >::type transform(transformSEXP);
    rcpp_result_gen = Rcpp::wrap(invDistWeight(d, exp, transform));
    return rcpp_result_gen;
END_RCPP
}
// popDistWMean
DataFrame popDistWMean(DataFrame fromDF, DataFrame toDF, std::string measureName, std::string fromID, std::string fromYear, std::string fromLonName, std::string fromLatName, std::string toLonName, std::string toLatName, std::string popName, std::string distFuncName, std::string distTransform, double decay);
RcppExport SEXP distweightRcpp_popDistWMean(SEXP fromDFSEXP, SEXP toDFSEXP, SEXP measureNameSEXP, SEXP fromIDSEXP, SEXP fromYearSEXP, SEXP fromLonNameSEXP, SEXP fromLatNameSEXP, SEXP toLonNameSEXP, SEXP toLatNameSEXP, SEXP popNameSEXP, SEXP distFuncNameSEXP, SEXP distTransformSEXP, SEXP decaySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type fromDF(fromDFSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type toDF(toDFSEXP);
    Rcpp::traits::input_parameter< std::string >::type measureName(measureNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromID(fromIDSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromYear(fromYearSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLonName(fromLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLatName(fromLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLonName(toLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLatName(toLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type popName(popNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type distFuncName(distFuncNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type distTransform(distTransformSEXP);
    Rcpp::traits::input_parameter< double >::type decay(decaySEXP);
    rcpp_result_gen = Rcpp::wrap(popDistWMean(fromDF, toDF, measureName, fromID, fromYear, fromLonName, fromLatName, toLonName, toLatName, popName, distFuncName, distTransform, decay));
    return rcpp_result_gen;
END_RCPP
}
// distWMean
DataFrame distWMean(DataFrame fromDF, DataFrame toDF, std::string measureName, std::string fromID, std::string fromYear, std::string fromLonName, std::string fromLatName, std::string toLonName, std::string toLatName, std::string distFuncName, std::string distTransform, double decay);
RcppExport SEXP distweightRcpp_distWMean(SEXP fromDFSEXP, SEXP toDFSEXP, SEXP measureNameSEXP, SEXP fromIDSEXP, SEXP fromYearSEXP, SEXP fromLonNameSEXP, SEXP fromLatNameSEXP, SEXP toLonNameSEXP, SEXP toLatNameSEXP, SEXP distFuncNameSEXP, SEXP distTransformSEXP, SEXP decaySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type fromDF(fromDFSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type toDF(toDFSEXP);
    Rcpp::traits::input_parameter< std::string >::type measureName(measureNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromID(fromIDSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromYear(fromYearSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLonName(fromLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLatName(fromLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLonName(toLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLatName(toLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type distFuncName(distFuncNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type distTransform(distTransformSEXP);
    Rcpp::traits::input_parameter< double >::type decay(decaySEXP);
    rcpp_result_gen = Rcpp::wrap(distWMean(fromDF, toDF, measureName, fromID, fromYear, fromLonName, fromLatName, toLonName, toLatName, distFuncName, distTransform, decay));
    return rcpp_result_gen;
END_RCPP
}
// minDist
DataFrame minDist(DataFrame fromDF, DataFrame toDF, std::string fromID, std::string fromYear, std::string fromLonName, std::string fromLatName, std::string toLonName, std::string toLatName, std::string distFuncName);
RcppExport SEXP distweightRcpp_minDist(SEXP fromDFSEXP, SEXP toDFSEXP, SEXP fromIDSEXP, SEXP fromYearSEXP, SEXP fromLonNameSEXP, SEXP fromLatNameSEXP, SEXP toLonNameSEXP, SEXP toLatNameSEXP, SEXP distFuncNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type fromDF(fromDFSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type toDF(toDFSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromID(fromIDSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromYear(fromYearSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLonName(fromLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fromLatName(fromLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLonName(toLonNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type toLatName(toLatNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type distFuncName(distFuncNameSEXP);
    rcpp_result_gen = Rcpp::wrap(minDist(fromDF, toDF, fromID, fromYear, fromLonName, fromLatName, toLonName, toLatName, distFuncName));
    return rcpp_result_gen;
END_RCPP
}
